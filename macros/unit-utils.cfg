#textdomain wesnoth-Electrifyre

#define NEED_VETERAN_SCOUT FROM_X FROM_Y
    [role]
        role=veteran_scout

        type="Aragwaith Silver Shield,Aragwaith Lancer,Aragwaith Scout"

        reassign=no
        [auto_recall][/auto_recall]
        [else]
            [store_unit]
                [filter]
                    side=1
                    canrecruit=yes
                [/filter]
                variable=temp
            [/store_unit]
            [move_unit_fake]
                type=Aragwaith Scout
                x={FROM_X},$($temp.x-1)
                y={FROM_Y},$temp.y
            [/move_unit_fake]
            [unit]
                role=veteran_scout
                side=1
                type="Aragwaith Scout"
                x,y=$($temp.x-1),$temp.y
                facing=ne
                animate=no
            [/unit]
            {CLEAR_VARIABLE temp}
        [/else]
    [/role]
#enddef

#define NEED_VETERAN_ADEPT FROM_X FROM_Y
    [role]
        role=veteran_adept

        type="Aragwaith Adept,Aragwaith Enchantress,Aragwaith Sorceress"

        reassign=no
        [auto_recall][/auto_recall]
        [else]
            [store_unit]
                [filter]
                    side=1
                    canrecruit=yes
                [/filter]
                variable=temp
            [/store_unit]
            [move_unit_fake]
                type=Aragwaith Adept
                x={FROM_X},$($temp.x-1)
                y={FROM_Y},$temp.y
            [/move_unit_fake]
            [unit]
                role=veteran_adept
                side=1
                type="Aragwaith Adept"
                x,y=$($temp.x-1),$temp.y
                facing=ne
                animate=no
            [/unit]
            {CLEAR_VARIABLE temp}
        [/else]
    [/role]
#enddef

#define NEED_VETERAN_EAGLE_RIDER _X _Y
    [if]
        [have_unit]
            side=1
            type="Aragwaith Eagle Master,Aragwaith Eagle Rider"
            search_recall_list=yes
            x,y=recall,recall
        [/have_unit]
        [then]
            [recall]
                type="Aragwaith Eagle Master,Aragwaith Eagle Rider"
                x,y={_X},{_Y}
            [/recall]
        [/then]
        # generate a fresh new one
        [else]
            {GENERIC_UNIT 1 "Aragwaith Eagle Rider" ({_Y}) ({_X})}
        [/else]
    [/if]
#enddef

#define ASSIGN_ID _ID_STR
    [+unit]
       id={_ID_STR}
    [/unit]
#enddef

#define ADJUST_FACING _FACING_VAL
    [+unit]
        facing={_FACING_VAL}
    [/unit]
#enddef

#define FORTIFIED_UNIT _SIDE _TYPE _X _Y
    {LOYAL_UNIT {_SIDE} {_TYPE} {_X} {_Y}}
    [+unit]
        guardian=yes
        [modifications]
            {TRAIT_FORTIFIED}
        [/modifications]
    [/unit]
#enddef

#define GENERIC_STATIONED_UNIT _SIDE _TYPE _X _Y
    [unit]
        side={_SIDE}
        type={_TYPE}
        x={_X}
        y={_Y}
        random_traits=yes
        generate_name=yes
        guardian=yes
        moves=0
        max_moves=0
    [/unit]
#enddef

#define RECRUIT_EXPERIENCED_UNITS SIDE
    [event]
        name=recruit
        first_time_only=no
        [filter]
            side={SIDE}
        [/filter]

        {VARIABLE min_experience "$(floor($unit.max_experience * {ON_DIFFICULTY 0.40 0.50 0.60}))"}
        {RANDOM "$min_experience..$($unit.max_experience - 1)"}
        {VARIABLE unit.experience $random}
        [unstore_unit]
            variable=unit
        [/unstore_unit]
        {CLEAR_VARIABLE min_experience,random}
    [/event]
#enddef

#define PASSABLE_CHECK
    [+unit]
        placement=map
        passable=yes
    [/unit]
#enddef

#define VARIABLE_RANDOM VAR_ID RVALUE
    {VARIABLE_OP ({VAR_ID}) rand ({RVALUE}) }
#enddef

#define RANDOM_SPAWN SIDE TYPES X Y
    {VARIABLE_RANDOM recruit_type {TYPES} }
    {GENERIC_UNIT {SIDE} $recruit_type {X} {Y} }
    [+unit]
        {PASSABLE_CHECK}
    [/unit]
    {CLEAR_VARIABLE recruit_type }
#enddef